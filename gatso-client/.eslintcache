[{"D:\\Gatso-Store\\gatso-client\\src\\index.js":"1","D:\\Gatso-Store\\gatso-client\\src\\reportWebVitals.js":"2","D:\\Gatso-Store\\gatso-client\\src\\components\\App.js":"3","D:\\Gatso-Store\\gatso-client\\src\\theme.js":"4","D:\\Gatso-Store\\gatso-client\\src\\hooks\\UseLocalStorage.js":"5","D:\\Gatso-Store\\gatso-client\\src\\reducers\\combineReducers.js":"6","D:\\Gatso-Store\\gatso-client\\src\\actions\\postUser.js":"7","D:\\Gatso-Store\\gatso-client\\src\\reducers\\userReducer.js":"8","D:\\Gatso-Store\\gatso-client\\src\\axios\\index.js":"9","D:\\Gatso-Store\\gatso-client\\src\\components\\Home\\index.js":"10","D:\\Gatso-Store\\gatso-client\\src\\components\\PopupBasket\\index.js":"11","D:\\Gatso-Store\\gatso-client\\src\\components\\SignUp\\index.js":"12","D:\\Gatso-Store\\gatso-client\\src\\components\\SignIn\\index.js":"13","D:\\Gatso-Store\\gatso-client\\src\\components\\Sidebar\\index.js":"14","D:\\Gatso-Store\\gatso-client\\src\\firebase\\index.js":"15"},{"size":840,"mtime":1609776519073,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1609690899793,"results":"18","hashOfConfig":"17"},{"size":1216,"mtime":1610368888686,"results":"19","hashOfConfig":"17"},{"size":976,"mtime":1609870586959,"results":"20","hashOfConfig":"17"},{"size":1170,"mtime":1610191714918,"results":"21","hashOfConfig":"17"},{"size":256,"mtime":1610281633115,"results":"22","hashOfConfig":"17"},{"size":254,"mtime":1610281886591,"results":"23","hashOfConfig":"17"},{"size":269,"mtime":1610281943490,"results":"24","hashOfConfig":"17"},{"size":471,"mtime":1610397617014,"results":"25","hashOfConfig":"17"},{"size":280,"mtime":1610361914852,"results":"26","hashOfConfig":"17"},{"size":1729,"mtime":1610369032623,"results":"27","hashOfConfig":"17"},{"size":8081,"mtime":1610369007605,"results":"28","hashOfConfig":"17"},{"size":7142,"mtime":1610369023462,"results":"29","hashOfConfig":"17"},{"size":16186,"mtime":1610397672118,"results":"30","hashOfConfig":"17"},{"size":578,"mtime":1610368887009,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"7sdw1q",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"D:\\Gatso-Store\\gatso-client\\src\\index.js",[],["66","67"],"D:\\Gatso-Store\\gatso-client\\src\\reportWebVitals.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\App.js",[],"D:\\Gatso-Store\\gatso-client\\src\\theme.js",[],"D:\\Gatso-Store\\gatso-client\\src\\hooks\\UseLocalStorage.js",[],"D:\\Gatso-Store\\gatso-client\\src\\reducers\\combineReducers.js",[],"D:\\Gatso-Store\\gatso-client\\src\\actions\\postUser.js",[],"D:\\Gatso-Store\\gatso-client\\src\\reducers\\userReducer.js",[],"D:\\Gatso-Store\\gatso-client\\src\\axios\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\Home\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\PopupBasket\\index.js",["68","69"],"import React from 'react';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Image from '../../img/product.png'\r\nimport { Button, Card, CardMedia, Grid, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ...theme.spreadThis,\r\n    root: {\r\n        display: \"flex\",\r\n        padding: \"8px\"\r\n    },\r\n    product__img: {\r\n        height: \"64px\",\r\n        width: \"64px\"\r\n    },\r\n    deleteBtn: {\r\n        cursor: \"pointer\",\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        marginTop: \"8px\"\r\n    }\r\n})\r\n);\r\n\r\nfunction PopProduct({ id, name, price, image }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    return (\r\n        <div>\r\n            <Card className={classes.root}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    className={classes.product__img}\r\n                    image={Image}\r\n                    title=\"Sample Product\"\r\n                />\r\n                <Grid div spacing={0.5}>\r\n                    <Grid item xs={8}>\r\n                        Product Name\r\n                    </Grid>\r\n                    <Grid container spacing={0.5}>\r\n                        <Grid item xs={6}>\r\n                            â‚¬5.00\r\n                    </Grid>\r\n                        <Grid item xs={6}>\r\n                            x2\r\n                    </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <IconButton className={classes.deleteBtn} aria-label=\"delete\">\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopProduct\r\n",["70","71"],"D:\\Gatso-Store\\gatso-client\\src\\components\\SignUp\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\SignIn\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\Sidebar\\index.js",["72","73"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { MenuItem, fade, InputBase, MenuList, Button, Paper, Popper, ClickAwayListener, Grow, Card } from \"@material-ui/core\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { auth } from \"../../firebase\";\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PopProduct from \"../PopupBasket\";\r\nimport axios from \"../../axios\"\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    ...theme.spreadThis,\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        color: theme.primary,\r\n        [theme.breakpoints.up('sm')]: {\r\n            height: '30px',\r\n\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '60px',\r\n        },\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        })\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    hide: {\r\n        display: \"none\"\r\n    },\r\n    drawer: {\r\n        justifyContent: \"start\",\r\n        flexShrink: 1\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    drawerHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    children: {\r\n        marginLeft: drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        marginLeft: 0\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        margin: 'auto',\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    logo: {\r\n        color: theme.palette.spreadThis.text.main\r\n    },\r\n    toggleMenu: {\r\n        color: theme.palette.spreadThis.text.main,\r\n        textTransform: \"capitalize\"\r\n    },\r\n    basketIcon: {\r\n        marginLeft: \"8px\",\r\n    },\r\n    basketList: {\r\n        maxHeight: \"500px\",\r\n        maxWidth: \"400px\",\r\n        overflowY: \"auto\",\r\n        '&::-webkit-scrollbar': {\r\n            width: '0'\r\n        },\r\n        \"& li\": {\r\n            justifyContent: \"center\"\r\n        }\r\n    },\r\n    popperBtn: {\r\n        margin: \"8px\"\r\n    }\r\n}));\r\n\r\nfunction Sidebar({ children, user }) {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const anchorRef = React.useRef(null);\r\n    const basketRef = React.useRef(null);\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const [toggleMenu, setToggleMenu] = useState(false);\r\n    const [toggleMiniBasket, setToggleMiniBasket] = useState(false)\r\n    const prevOpen = React.useRef(toggleMenu);\r\n    const prevBasketOpen = React.useRef(toggleMiniBasket);\r\n\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && toggleMenu === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n\r\n        prevOpen.current = toggleMenu;\r\n\r\n        if (prevBasketOpen.current === true && toggleMiniBasket === false) {\r\n            basketRef.current.focus();\r\n        }\r\n\r\n        prevBasketOpen.current = toggleMiniBasket;\r\n    }, [toggleMenu, toggleMiniBasket]);\r\n\r\n    const handleToggle = () => {\r\n        if (!user) {\r\n            history.push(\"/sign-in\")\r\n            return\r\n        }\r\n        setToggleMenu((prevOpen) => !prevOpen);\r\n        setToggleMiniBasket(false)\r\n    };\r\n    const handleBasketToggle = () => {\r\n        setToggleMiniBasket((prevBasketOpen) => !prevBasketOpen);\r\n        setToggleMenu(false);\r\n    };\r\n\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        auth.signOut()\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setToggleMenu(false);\r\n    };\r\n\r\n    const handleBasketClose = (event) => {\r\n        if (basketRef.current && basketRef.current.contains(event.target)) {\r\n            return;\r\n        }\r\n\r\n        setToggleMiniBasket(false);\r\n    };\r\n\r\n    const handleListKeyDown = (event) => {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setToggleMenu(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"sticky\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: openDrawer\r\n                })}\r\n            >\r\n                <Toolbar className={clsx(classes.toolbar)}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={() => setOpenDrawer(true)}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, openDrawer && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={clsx(classes.logo)} variant=\"h6\" noWrap>\r\n                        Gatso\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Searchâ€¦\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            ref={anchorRef}\r\n                            aria-controls={toggleMenu ? 'menu-list-grow' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleToggle}\r\n                            className={clsx(classes.toggleMenu)}\r\n                        >\r\n                            <AccountCircleIcon color=\"action\" fontSize=\"large\" />&nbsp;\r\n                                {(user && user.displayName) ? `Hello, ${user.displayName}` : `Hello,     Guest`}\r\n                        </Button>\r\n                        {user && <Popper open={toggleMenu} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                            {({ TransitionProps, placement }) => (\r\n                                <Grow\r\n                                    {...TransitionProps}\r\n                                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                                >\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                            <MenuList autoFocusItem={toggleMenu} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                                <MenuItem>Profile</MenuItem>\r\n                                                <MenuItem>Orders</MenuItem>\r\n                                                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                                            </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                </Grow>\r\n                            )}\r\n                        </Popper>}\r\n                    </div>\r\n                    <Button\r\n                        ref={basketRef}\r\n                        aria-controls={toggleMenu ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleBasketToggle}\r\n                        className={classes.basketIcon}>\r\n                        <ShoppingCartIcon />0\r\n                    </Button>\r\n                    <Popper open={toggleMiniBasket} anchorEl={basketRef.current} role={undefined} transition disablePortal>\r\n                        {({ TransitionProps, placement }) => (\r\n                            <Grow\r\n                                {...TransitionProps}\r\n                                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                            >\r\n                                <Paper>\r\n                                    <ClickAwayListener onClickAway={handleBasketClose}>\r\n                                        <MenuList className={classes.basketList} autoFocusItem={toggleMiniBasket} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                            <MenuItem onClick={handleBasketClose}>\r\n                                                <PopProduct />\r\n                                            </MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                            <MenuItem onClick={handleBasketClose}><PopProduct /></MenuItem>\r\n                                        </MenuList>\r\n                                    </ClickAwayListener>\r\n                                    <Button variant=\"contained\" color=\"primary\" className={classes.popperBtn}>\r\n                                        Proceed To Checkout\r\n                                        </Button>\r\n                                    <Button variant=\"contained\" color=\"secondary\">\r\n                                        Clear\r\n                                        </Button>\r\n                                </Paper>\r\n                            </Grow>\r\n                        )}\r\n                    </Popper>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={openDrawer}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <Typography variant=\"h5\">Menu</Typography>\r\n                    <IconButton onClick={() => setOpenDrawer(false)}>\r\n                        {theme.direction === \"ltr\" ? (\r\n                            <ChevronLeftIcon />\r\n                        ) : (\r\n                                <ChevronRightIcon />\r\n                            )}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {[\"Home\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\r\n                        <MenuItem button key={text} component={Link} to={'/'}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: openDrawer\r\n                })}>\r\n                <div className={clsx(classes.children)}>\r\n                    {children}\r\n                </div>\r\n                <div className={classes.drawerHeader} />\r\n\r\n            </main>\r\n        </div >\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Sidebar);\r\n","D:\\Gatso-Store\\gatso-client\\src\\firebase\\index.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":28,"column":11,"nodeType":"80","messageId":"81","endLine":28,"endColumn":16},{"ruleId":"74","replacedBy":"83"},{"ruleId":"76","replacedBy":"84"},{"ruleId":"78","severity":1,"message":"85","line":20,"column":95,"nodeType":"80","messageId":"81","endLine":20,"endColumn":99},{"ruleId":"78","severity":1,"message":"86","line":27,"column":8,"nodeType":"80","messageId":"81","endLine":27,"endColumn":13},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.",["87"],["88"],"'Card' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]