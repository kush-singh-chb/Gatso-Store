[{"D:\\Gatso-Store\\gatso-client\\src\\index.js":"1","D:\\Gatso-Store\\gatso-client\\src\\reportWebVitals.js":"2","D:\\Gatso-Store\\gatso-client\\src\\components\\App.js":"3","D:\\Gatso-Store\\gatso-client\\src\\theme.js":"4","D:\\Gatso-Store\\gatso-client\\src\\hooks\\UseLocalStorage.js":"5","D:\\Gatso-Store\\gatso-client\\src\\reducers\\combineReducers.js":"6","D:\\Gatso-Store\\gatso-client\\src\\actions\\postUser.js":"7","D:\\Gatso-Store\\gatso-client\\src\\reducers\\userReducer.js":"8","D:\\Gatso-Store\\gatso-client\\src\\axios\\index.js":"9","D:\\Gatso-Store\\gatso-client\\src\\components\\Home\\index.js":"10","D:\\Gatso-Store\\gatso-client\\src\\components\\PopupBasket\\index.js":"11","D:\\Gatso-Store\\gatso-client\\src\\components\\SignUp\\index.js":"12","D:\\Gatso-Store\\gatso-client\\src\\components\\SignIn\\index.js":"13","D:\\Gatso-Store\\gatso-client\\src\\components\\Sidebar\\index.js":"14","D:\\Gatso-Store\\gatso-client\\src\\firebase\\index.js":"15","D:\\Gatso-Store\\gatso-client\\src\\components\\VendorDash\\index.js":"16","D:\\Gatso-Store\\gatso-client\\src\\components\\VendorSignup\\index.js":"17","D:\\Gatso-Store\\gatso-client\\src\\reducers\\vendorReducer.js":"18","D:\\Gatso-Store\\gatso-client\\src\\actions\\postVendor.js":"19","D:\\Gatso-Store\\gatso-client\\src\\components\\VendorSignIn\\index.js":"20"},{"size":840,"mtime":1612117071493,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1609690899793,"results":"23","hashOfConfig":"22"},{"size":2255,"mtime":1612187456352,"results":"24","hashOfConfig":"22"},{"size":1043,"mtime":1612118286194,"results":"25","hashOfConfig":"22"},{"size":1170,"mtime":1610191714918,"results":"26","hashOfConfig":"22"},{"size":333,"mtime":1612109562576,"results":"27","hashOfConfig":"22"},{"size":254,"mtime":1612109416977,"results":"28","hashOfConfig":"22"},{"size":269,"mtime":1610281943490,"results":"29","hashOfConfig":"22"},{"size":495,"mtime":1612103151852,"results":"30","hashOfConfig":"22"},{"size":280,"mtime":1610361914852,"results":"31","hashOfConfig":"22"},{"size":1680,"mtime":1611937488586,"results":"32","hashOfConfig":"22"},{"size":8079,"mtime":1611671826687,"results":"33","hashOfConfig":"22"},{"size":7440,"mtime":1612188150795,"results":"34","hashOfConfig":"22"},{"size":17064,"mtime":1612188582316,"results":"35","hashOfConfig":"22"},{"size":578,"mtime":1611665585304,"results":"36","hashOfConfig":"22"},{"size":7644,"mtime":1612187416846,"results":"37","hashOfConfig":"22"},{"size":12571,"mtime":1612185936922,"results":"38","hashOfConfig":"22"},{"size":266,"mtime":1612186313395,"results":"39","hashOfConfig":"22"},{"size":238,"mtime":1612109442348,"results":"40","hashOfConfig":"22"},{"size":7520,"mtime":1612185548230,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"7sdw1q",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Gatso-Store\\gatso-client\\src\\index.js",[],["84","85"],"D:\\Gatso-Store\\gatso-client\\src\\reportWebVitals.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\App.js",["86"],"D:\\Gatso-Store\\gatso-client\\src\\theme.js",[],"D:\\Gatso-Store\\gatso-client\\src\\hooks\\UseLocalStorage.js",[],"D:\\Gatso-Store\\gatso-client\\src\\reducers\\combineReducers.js",[],"D:\\Gatso-Store\\gatso-client\\src\\actions\\postUser.js",[],"D:\\Gatso-Store\\gatso-client\\src\\reducers\\userReducer.js",[],"D:\\Gatso-Store\\gatso-client\\src\\axios\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\Home\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\PopupBasket\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\SignUp\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\SignIn\\index.js",["87"],"D:\\Gatso-Store\\gatso-client\\src\\components\\Sidebar\\index.js",["88"],"D:\\Gatso-Store\\gatso-client\\src\\firebase\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\VendorDash\\index.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\VendorSignup\\index.js",["89","90","91","92","93"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Image from '../../img/store.jpg'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { auth } from '../../firebase'\r\nimport { Container } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from '../../axios';\r\nimport { setVendor } from \"../../actions/postVendor\"\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundImage: `url(${Image})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n        height: \"120vh\",\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        backgroundImage: `linear-gradient(180deg, rgba(245,245,245,0.60) 0%, rgba(255,255,255,0.60) 100%)`,\r\n        display: 'flex',\r\n        position: \"absolute\",\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        borderRadius: \"10px\",\r\n        width: \"80%\",\r\n        left: \"27%\",\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.down('md')]: {\r\n            width: \"80%\",\r\n            left: \"10%\",\r\n        },\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        fontWeight: \"600\"\r\n    },\r\n    link: {\r\n        color: theme.palette.spreadThis.text.secondary,\r\n    },\r\n    googleBtn: {\r\n        backgroundColor: \"#4285F4\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#4285F4\"\r\n        },\r\n        fontWeight: \"600\",\r\n        color: \"white\",\r\n        position: \"relative\",\r\n        left: \"40%\",\r\n    },\r\n    icon: {\r\n        color: \"white\",\r\n        width: \"20px\",\r\n        height: \"20px\",\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction SignUp({ setVendor }) {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [fName, setFName] = useState(\"\")\r\n    const [fNameError, setFNameError] = useState(\"\")\r\n    const [lNameError, setLNameError] = useState(\"\")\r\n    const [lName, setLName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [eircode, setEircode] = useState(\"\")\r\n    const [eirError, setEirError] = useState(\"\")\r\n    const [cNameError, setCNameError] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [rNoti, setRNoti] = useState(false)\r\n    const [tcCheck, setTcCheck] = useState(false)\r\n    const [cName, setCName] = useState(\"\")\r\n\r\n\r\n    const handleEirCode = (e) => {\r\n        e.preventDefault();\r\n        setEircode(e.target.value.trim().toUpperCase())\r\n        var pattern = '(?:^[AC-FHKNPRTV-Y][0-9]{2}|D6W)[ -]?[0-9AC-FHKNPRTV-Y]{4}$';\r\n\r\n        var reg = new RegExp(pattern, 'i');\r\n        //return the first Eircode\r\n        if (eircode.length > 3) {\r\n            if (reg.test(e.target.value.trim())) {\r\n                setEirError('')\r\n            } else {\r\n                setEirError(\"Invalid eir code\")\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const error = false;\r\n        if (eirError !== '' || eircode === '') {\r\n            setEirError(\"Please provide EirCode\")\r\n            error = true\r\n        }\r\n        if (cName === '') {\r\n            setCNameError(\"Please Provide a Company Name\")\r\n            error = true\r\n        }\r\n        if (cName.length < 4) {\r\n            setCNameError(\"Please Provide a Longer Company Name\")\r\n            error = true\r\n        }\r\n        if (fName === '') {\r\n            setFNameError(\"First Name Cannot be empty\")\r\n            error = true\r\n        }\r\n        if (lName === '') {\r\n            setLNameError(\"Last Name Cannot be empty\")\r\n            error = true\r\n        }\r\n        if (error) {\r\n            return;\r\n        }\r\n        auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                response.user.updateProfile({\r\n                    displayName: fName + \" \" + lName\r\n                }).then(() => {\r\n                    const bodyData = new FormData()\r\n                    bodyData.append(\"uid\", response.user.uid)\r\n                    bodyData.append(\"email\", response.user.email)\r\n                    bodyData.append(\"companyName\", cName)\r\n                    bodyData.append(\"eircode\", eircode)\r\n                    axios.post(\"/vendor\", bodyData).then(response => {\r\n                        if (response.status === 200) {\r\n                            setVendor()\r\n                            history.push(\"/\")\r\n                        } else {\r\n                            alert(response.message)\r\n                        }\r\n                    }).catch(error => {\r\n                        alert(error.message)\r\n                    })\r\n\r\n                })\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <main className={classes.root}>\r\n            <Container className={classes.paper} maxWidth=\"sm\">\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up as Vendor\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                value={cName}\r\n                                autoComplete=\"cName\"\r\n                                name=\"Company Name\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                inputProps={{\r\n                                    minLength: 5\r\n                                }}\r\n                                error={cNameError !== ''}\r\n                                helperText={cNameError}\r\n                                fullWidth\r\n                                id=\"cName\"\r\n                                label=\"Company Name\"\r\n                                autoFocus\r\n                                onChange={(e) => {\r\n                                    if (e.target.value.length >= 4) {\r\n                                        setCNameError(\"\")\r\n                                    }\r\n                                    setCName(e.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                value={fName}\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                error={fNameError !== ''}\r\n                                helperText={fNameError}\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                onChange={(e) => {\r\n                                    setFNameError(\"\")\r\n                                    setFName(e.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                error={lNameError !== ''}\r\n                                helperText={lNameError}\r\n                                autoComplete=\"lname\"\r\n                                value={lName}\r\n                                onChange={(e) => {\r\n                                    setLNameError(\"\")\r\n                                    setLName(e.target.value)\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => { setEmail(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                inputProps={{\r\n                                    maxLength: 7\r\n                                }}\r\n                                id=\"eircode\"\r\n                                label=\"EirCode\"\r\n                                name=\"EirCode\"\r\n                                autoComplete=\"eircode\"\r\n                                value={eircode}\r\n                                error={eirError !== ''}\r\n                                helperText={eirError}\r\n                                onChange={handleEirCode}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => { setPassword(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" value={rNoti} onChange={(e) => { setRNoti(e.target.checked) }} />}\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"primary\" value={tcCheck} onChange={(e) => { setTcCheck(e.target.checked) }} />}\r\n                                label=\"Agree to all the Terms &amp; Conditions.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link className={classes.link}\r\n                                href=\"/vendor-signin\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                    </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Container>\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nexport default connect(null, { setVendor })(SignUp);","D:\\Gatso-Store\\gatso-client\\src\\reducers\\vendorReducer.js",[],"D:\\Gatso-Store\\gatso-client\\src\\actions\\postVendor.js",[],"D:\\Gatso-Store\\gatso-client\\src\\components\\VendorSignIn\\index.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":21,"column":35,"nodeType":"100","messageId":"101","endLine":21,"endColumn":37},{"ruleId":"98","severity":1,"message":"102","line":92,"column":44,"nodeType":"100","messageId":"101","endLine":92,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":15,"column":8,"nodeType":"105","messageId":"106","endLine":15,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":115,"column":13,"nodeType":"105","messageId":"109","endLine":115,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":119,"column":13,"nodeType":"105","messageId":"109","endLine":119,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":123,"column":13,"nodeType":"105","messageId":"109","endLine":123,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":127,"column":13,"nodeType":"105","messageId":"109","endLine":127,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":131,"column":13,"nodeType":"105","messageId":"109","endLine":131,"endColumn":18},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'ListItem' is defined but never used.","Identifier","unusedVar","no-const-assign","'error' is constant.","const","no-global-assign","no-unsafe-negation"]